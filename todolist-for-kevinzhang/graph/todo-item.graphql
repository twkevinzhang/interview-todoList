extend type Query {
  todoItem(id: ID!): TodoItem
  todoItems(filter: TodoItemsFilters, sortBy: TodoItemsSortBy): [TodoItem!]!
}

extend type Mutation {
  createTodoItem(form: TodoItemForm!, parentID: ID): TodoItem!
  updateTodoItem(id: ID!, form: TodoItemForm!): Boolean!
  deleteTodoItem(id: ID!): Boolean!
  deleteAttachment(id: ID!): Boolean!
  deleteComment(id: ID!): Boolean!
}

type TodoItem {
  id: ID!
  taskListID: ID
  taskList: TaskList
  title: String
  """
  執行人
  """
  owners: [User!]!
  """
  關注人
  """
  followers: [User!]!
  """
  開始日期
  """
  start: RFC3339
  """
  到期日
  """
  due: RFC3339
  description: String
  parentID: ID
  parent: TodoItem
  children: [TodoItem!]!
  attachments: [Attachment!]!
  comments: [Comment!]!
  isCompleted: Boolean!
  createdAt: RFC3339!
  createdByUID: String!
  createdBy: User!
  updatedAt: RFC3339!
  updatedByUID: String!
  updatedBy: User!
}

type Comment {
  id: ID!
  todoItemID: ID!
  content: String!
  createdAt: RFC3339!
  createdByUID: String!
  createdBy: User!
}

type Attachment {
  id: ID!
  todoItemID: ID!
  name: String!
  url: String!
  createdAt: RFC3339!
  createdByUID: String!
  createdBy: User!
}

input TodoItemForm {
  taskListID: ID
  title: String
  """
  指派執行人
  """
  putOwnersUIDs: [String!]
  """
  指派關注人
  """
  putFollowersUIDs: [String!]
  duration: DateRange
  description: String
  newAttachments: [FileInput!]
  newComments: [String!]
  isCompleted: Boolean
}

input TodoItemsFilters {
  taskListID: ID
  creatorUID: StringsFilter
  ownerUID: StringsFilter
  followerUID: StringsFilter
  duration: DateRange
  isCompleted: Boolean
}

enum TodoItemsSortBy {
  """
  建立時間
  """
  CREATED_AT_ASC
  CREATED_AT_DESC
  """
  計劃完成時間
  """
  DUE_ASC
  DUE_DESC
  """
  創建者
  """
  CREATED_BY_ASC
  CREATED_BY_DESC
}
